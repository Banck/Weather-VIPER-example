//
//  CitiesProtocols.swift
//  Weather VIPER Example
//
//  Created Egor Sakhabaev on 13.07.2018.
//  Copyright Â© 2018 Egor Sakhabaev. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//

import Foundation

//MARK: Wireframe -
enum CitiesNavigationOption {
    case cityDeail(Weather)
    //    case firstModule
    //    case secondModule(someData)
}

protocol CitiesWireframeInterface: class {
    func navigate(to option: CitiesNavigationOption)
}

//MARK: Presenter -
protocol CitiesPresenterInterface: class {

    var interactor: CitiesInteractorInput? { get set }
    
    func viewDidLoad()
    func didSelectAddNewCity()
    func didSelectRow(at index: Int)
}
extension CitiesPresenterInterface {
    func viewDidLoad() {/*leaves this empty*/}
}

//MARK: Interactor -
protocol CitiesInteractorOutput: class {
    func fetchedWeather(with error: Error)
    func fetchedWeather(with weather: Weather)
    func fetched()

    /* Interactor -> Presenter */
}

protocol CitiesInteractorInput: class {
    
    var presenter: CitiesInteractorOutput?  { get set }

    func fetchWeather(for cityName: String)
    /* Presenter -> Interactor */
}

//MARK: View -
protocol CitiesView: class, Loadable, Alertable {

    var presenter: CitiesPresenterInterface?  { get set }

    func display(_ citiesWeather: [WeatherInfo], shouldClearBefore: Bool)
    func display(_ cityWeather: WeatherInfo)
    
    /* Presenter -> ViewController */
}
